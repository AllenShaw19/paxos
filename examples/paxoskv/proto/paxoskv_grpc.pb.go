// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: paxoskv.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PhxKVServerClient is the client API for PhxKVServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PhxKVServerClient interface {
	Put(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error)
	GetLocal(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error)
	GetGlobal(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error)
	Delete(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error)
}

type phxKVServerClient struct {
	cc grpc.ClientConnInterface
}

func NewPhxKVServerClient(cc grpc.ClientConnInterface) PhxKVServerClient {
	return &phxKVServerClient{cc}
}

func (c *phxKVServerClient) Put(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error) {
	out := new(KVResponse)
	err := c.cc.Invoke(ctx, "/paxoskv.PhxKVServer/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phxKVServerClient) GetLocal(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error) {
	out := new(KVResponse)
	err := c.cc.Invoke(ctx, "/paxoskv.PhxKVServer/GetLocal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phxKVServerClient) GetGlobal(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error) {
	out := new(KVResponse)
	err := c.cc.Invoke(ctx, "/paxoskv.PhxKVServer/GetGlobal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phxKVServerClient) Delete(ctx context.Context, in *KVOperator, opts ...grpc.CallOption) (*KVResponse, error) {
	out := new(KVResponse)
	err := c.cc.Invoke(ctx, "/paxoskv.PhxKVServer/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhxKVServerServer is the server API for PhxKVServer service.
// All implementations must embed UnimplementedPhxKVServerServer
// for forward compatibility
type PhxKVServerServer interface {
	Put(context.Context, *KVOperator) (*KVResponse, error)
	GetLocal(context.Context, *KVOperator) (*KVResponse, error)
	GetGlobal(context.Context, *KVOperator) (*KVResponse, error)
	Delete(context.Context, *KVOperator) (*KVResponse, error)
	mustEmbedUnimplementedPhxKVServerServer()
}

// UnimplementedPhxKVServerServer must be embedded to have forward compatible implementations.
type UnimplementedPhxKVServerServer struct {
}

func (UnimplementedPhxKVServerServer) Put(context.Context, *KVOperator) (*KVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (UnimplementedPhxKVServerServer) GetLocal(context.Context, *KVOperator) (*KVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocal not implemented")
}
func (UnimplementedPhxKVServerServer) GetGlobal(context.Context, *KVOperator) (*KVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGlobal not implemented")
}
func (UnimplementedPhxKVServerServer) Delete(context.Context, *KVOperator) (*KVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedPhxKVServerServer) mustEmbedUnimplementedPhxKVServerServer() {}

// UnsafePhxKVServerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhxKVServerServer will
// result in compilation errors.
type UnsafePhxKVServerServer interface {
	mustEmbedUnimplementedPhxKVServerServer()
}

func RegisterPhxKVServerServer(s grpc.ServiceRegistrar, srv PhxKVServerServer) {
	s.RegisterService(&PhxKVServer_ServiceDesc, srv)
}

func _PhxKVServer_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVOperator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhxKVServerServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxoskv.PhxKVServer/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhxKVServerServer).Put(ctx, req.(*KVOperator))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhxKVServer_GetLocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVOperator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhxKVServerServer).GetLocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxoskv.PhxKVServer/GetLocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhxKVServerServer).GetLocal(ctx, req.(*KVOperator))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhxKVServer_GetGlobal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVOperator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhxKVServerServer).GetGlobal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxoskv.PhxKVServer/GetGlobal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhxKVServerServer).GetGlobal(ctx, req.(*KVOperator))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhxKVServer_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVOperator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhxKVServerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paxoskv.PhxKVServer/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhxKVServerServer).Delete(ctx, req.(*KVOperator))
	}
	return interceptor(ctx, in, info, handler)
}

// PhxKVServer_ServiceDesc is the grpc.ServiceDesc for PhxKVServer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhxKVServer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "paxoskv.PhxKVServer",
	HandlerType: (*PhxKVServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _PhxKVServer_Put_Handler,
		},
		{
			MethodName: "GetLocal",
			Handler:    _PhxKVServer_GetLocal_Handler,
		},
		{
			MethodName: "GetGlobal",
			Handler:    _PhxKVServer_GetGlobal_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PhxKVServer_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paxoskv.proto",
}
